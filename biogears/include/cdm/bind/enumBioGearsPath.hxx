// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

/**
 * @file
 * @brief Generated from enumBioGearsPath.xsd.
 */

#ifndef ENUM_BIO_GEARS_PATH_HXX
#define ENUM_BIO_GEARS_PATH_HXX

#ifndef XSD_CXX11
#define XSD_CXX11
#endif

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include "cdm-schema.hxx"

// Forward declarations.
//
namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        class enumBioGearsPath;
      }
    }
  }
}


#include <memory>    // ::std::unique_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search
#include <utility>   // std::move

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      /**
       * @brief C++ namespace for the %uri:/mil/tatrc/physiology/datamodel
       * schema namespace.
       */
      namespace datamodel
      {
        /**
         * @brief Enumeration class corresponding to the %enumBioGearsPath
         * schema type.
         */
        class __attribute__ ((visibility ("default"))) enumBioGearsPath: public ::xml_schema::string
        {
          public:

          /**
           * @brief Underlying enum type.
           */
          enum value
          {
            VenaCavaToRightHeart2,
            RightHeart2ToRightHeart1,
            RightHeart1ToMainPulmonaryArteries,
            MainPulmonaryArteriesToLeftIntermediatePulmonaryArteries,
            MainPulmonaryArteriesToRightIntermediatePulmonaryArteries,
            LeftIntermediatePulmonaryArteriesToLeftPulmonaryArteries,
            RightIntermediatePulmonaryArteriesToRightPulmonaryArteries,
            LeftPulmonaryArteriesToLeftPulmonaryVeins,
            RightPulmonaryArteriesToRightPulmonaryVeins,
            LeftPulmonaryArteriesToLeftPulmonaryCapillaries,
            RightPulmonaryArteriesToRightPulmonaryCapillaries,
            LeftPulmonaryCapillariesToLeftPulmonaryVeins,
            RightPulmonaryCapillariesToRightPulmonaryVeins,
            LeftPulmonaryVeinsToLeftIntermediatePulmonaryVeins,
            RightPulmonaryVeinsToRightIntermediatePulmonaryVeins,
            LeftIntermediatePulmonaryVeinsToLeftHeart2,
            RightIntermediatePulmonaryVeinsToLeftHeart2,
            LeftPulmonaryVeinsToLeftHeart2,
            RightPulmonaryVeinsToLeftHeart2,
            LeftHeart2ToLeftHeart1,
            MyocardiumVascular1ToPericardium2,
            Pericardium1ToCardiovascularGround,
            CardiovascularGroundToPericardium1,
            Pericardium2ToPericardium1,
            LeftHeart1ToAorta2,
            Aorta2ToAorta3,
            Aorta3ToAorta1,
            Aorta1ToBrainVascular1,
            Aorta1toMyocardiumVascular1,
            Aorta1ToRightArmVascular1,
            Aorta1ToLeftArmVascular1,
            Aorta1ToRightLegVascular1,
            Aorta1ToLeftLegVascular1,
            Aorta1ToFatVascular1,
            Aorta1ToBoneVascular1,
            Aorta1ToMuscleVascular1,
            Aorta1ToSkinVascular1,
            Aorta1ToLiverVascular1,
            Aorta1ToSplanchnicVascular1,
            Aorta1ToSpleenVascular1,
            Aorta1ToLargeIntestineVascular1,
            Aorta1ToSmallIntestineVascular1,
            Aorta1ToLeftKidneyVascular,
            Aorta1ToRightKidneyVascular,
            BrainVascular1ToBrainVascular2,
            RightArmVascular1ToRightArmVascular2,
            LeftArmVascular1ToLeftArmVascular2,
            RightLegVascular1ToRightLegVascular2,
            LeftLegVascular1ToLeftLegVascular2,
            FatVascular1ToFatVascular2,
            BoneVascular1ToBoneVascular2,
            MuscleVascular1ToMuscleVascular2,
            SkinVascular1ToSkinVascular2,
            LiverVascular1ToLiverVascular2,
            SplanchnicVascular1ToPortalVein,
            SpleenVascular1ToPortalVein,
            LargeIntestineVascular1ToPortalVein,
            SmallIntestineVascular1ToPortalVein,
            PortalVeinToLiverVascular1,
            LeftKidneyVasculartoRenalVein,
            RightKidneyVascularToRenalVein,
            MyocardiumVascular1ToMyocardiumVascular2,
            BrainVascular2ToVenaCava,
            MyocardiumVascular2ToVenaCava,
            RightArmVascular2ToVenaCava,
            LeftArmVascular2ToVenaCava,
            RightLegVascular2ToVenaCava,
            LeftLegVascular2ToVenaCava,
            FatVascular2ToVenaCava,
            BoneVascular2ToVenaCava,
            MuscleVascular2ToVenaCava,
            SkinVascular2ToVenaCava,
            LiverVascular2ToVenaCava,
            RenalVeinToVenaCava,
            BrainVascular1ToCardiovascularGround,
            MyocardiumVascular1ToCardiovascularGround,
            VenaCavaToCardiovascularGround,
            VenaCavaToCardiovascularGroundBleeding,
            CardiovascularGroundIVToVenaCava,
            CardiovascularGroundSubstanceToVenaCava,
            LeftPulmonaryArteriesToCardiovascularGround,
            LeftPulmonaryCapillariesToCardiovascularGround,
            LeftPulmonaryVeinsToCardiovascularGround,
            RightPulmonaryArteriesToCardiovascularGround,
            RightPulmonaryCapillariesToCardiovascularGround,
            RightPulmonaryVeinsToCardiovascularGround,
            Aorta1ToCardiovascularGround,
            RightArmVascular1ToCardiovascularGround,
            LeftArmVascular1ToCardiovascularGround,
            RightLegVascular1ToCardiovascularGround,
            LeftLegVascular1ToCardiovascularGround,
            FatVascular1ToCardiovascularGround,
            BoneVascular1ToCardiovascularGround,
            MuscleVascular1ToCardiovascularGround,
            SkinVascular1ToCardiovascularGround,
            LiverVascular1ToCardiovascularGround,
            SplanchnicVascular1ToCardiovascularGround,
            SpleenVascular1ToCardiovascularGround,
            LargeIntestineVascular1ToCardiovascularGround,
            SmallIntestineVascular1ToCardiovascularGround,
            LeftKidneyToCardiovascularGround,
            RightKidneyToCardiovascularGround,
            RightHeart1ToRightHeart3,
            LeftHeart1ToLeftHeart3,
            RightHeart3ToGround,
            LeftHeart3ToGround,
            FatExtravascularToCardiovascularGround,
            Fat1ToFatExtravascular,
            BoneExtravascularToCardiovascularGround,
            Bone1ToBoneExtravascular,
            BrainExtravascularToCardiovascularGround,
            Brain1ToBrainExtravascular,
            GutExtravascularToCardiovascularGround,
            Splanchnic1ToGutExtravascular,
            LargeIntestine1ToGutExtravascular,
            SmallIntestine1ToGutExtravascular,
            RightKidneyExtravascularToCardiovascularGround,
            RightKidneyVascularToRightKidneyExtravascular,
            LeftKidneyExtravascularToCardiovascularGround,
            LeftKidneyVascularToLeftKidneyExtravascular,
            LiverExtravascularToCardiovascularGround,
            Liver1ToLiverExtravascular,
            LeftLungExtravascularToCardiovascularGround,
            LeftPulmonaryArteriesToLeftLungExtravascular,
            LeftPulmonaryCapillariesToLeftLungExtravascular,
            LeftPulmonaryVeinsToLeftLungExtravascular,
            RightLungExtravascularToCardiovascularGround,
            RightPulmonaryArteriesToRightLungExtravascular,
            RightPulmonaryCapillariesToRightLungExtravascular,
            RightPulmonaryVeinsToRightLungExtravascular,
            MuscleExtravascularToCardiovascularGround,
            Muscle1ToMuscleExtravascular,
            MyocardiumExtravascularToCardiovascularGround,
            Myocardium1ToMyocardiumExtravascular,
            SkinExtravascularToCardiovascularGround,
            Skin1ToSkinExtravascular,
            SpleenExtravascularToCardiovascularGround,
            Spleen1ToSpleenExtravascular,
            SkinExtravascularToSweatingGround,
            TemperatureGroundToCore,
            CoreToSkin,
            CoreToTemperatureGround,
            RightRenalArteryConnectionPath,
            RightRenalArteryPath,
            RightAfferentArteriolePath,
            RightGlomerularCapillariesPath,
            RightEfferentArteriolePath,
            RightPeritubularCapillariesPath,
            RightRenalVeinPath,
            RightRenalArteryCompliancePath,
            RightGlomerularCapillariesCompliancePath,
            RightRenalVeinCompliancePath,
            RightOsmoticGlomerularPath,
            RightGlomerularFilterPath,
            RightOsmoticBowmansPath,
            RightTubulesPath,
            RightUreterPath,
            RightOsmoticTubulesPath,
            RightReabsorptionFilterPath,
            RightOsmoticPeritubularCapillariesPath,
            RightBladderPath,
            LeftRenalArteryConnectionPath,
            LeftRenalArteryPath,
            LeftAfferentArteriolePath,
            LeftGlomerularCapillariesPath,
            LeftEfferentArteriolePath,
            LeftPeritubularCapillariesPath,
            LeftRenalVeinPath,
            LeftRenalArteryCompliancePath,
            LeftGlomerularCapillariesCompliancePath,
            LeftRenalVeinCompliancePath,
            LeftOsmoticGlomerularPath,
            LeftGlomerularFilterPath,
            LeftOsmoticBowmansPath,
            LeftTubulesPath,
            LeftUreterPath,
            LeftOsmoticTubulesPath,
            LeftReabsorptionFilterPath,
            LeftOsmoticPeritubularCapillariesPath,
            LeftBladderPath,
            BladderCompliancePath,
            UrethraPath,
            GutChymeToSmallIntestineVascular,
            ExternalEnvironmentToMouth,
            MouthToCarina,
            CarinaToRightAnatomicDeadSpace,
            CarinaToLeftAnatomicDeadSpace,
            RightAnatomicDeadSpaceToRightAlveoli,
            LeftAnatomicDeadSpaceToLeftAlveoli,
            RightAlveoliToRightPleural,
            LeftAlveoliToLeftPleural,
            RightAnatomicDeadSpaceToRightPleural,
            LeftAnatomicDeadSpaceToLeftPleural,
            ExternalEnvironmentToRespiratoryMuscle,
            MouthToStomach,
            StomachToExternalEnvironment,
            RightPleuralToRespiratoryMuscle,
            LeftPleuralToRespiratoryMuscle,
            RightPleuralToExternalEnvironment,
            LeftPleuralToExternalEnvironment,
            RightAlveoliToRightAlveoliLeak,
            RightAlveoliLeakToRightPleural,
            LeftAlveoliToLeftAlveoliLeak,
            LeftAlveoliLeakToLeftPleural,
            ExternalEnvironmentToRightChestLeak,
            RightChestLeakToRightPleural,
            ExternalEnvironmentToLeftChestLeak,
            LeftChestLeakToLeftPleural,
            AnesthesiaGroundToVentilatorConnection,
            AnesthesiaGroundToSqueeze,
            AnesthesiaGroundToReliefValve,
            SqueezeToBag,
            VentilatorToVentilatorConnection,
            VentilatorToSelector,
            BagToSelector,
            SelectorToReliefValve,
            SelectorToScrubber,
            ScrubberToGasInlet,
            AnesthesiaGroundToGasSource,
            GasSourceToGasInlet,
            GasInletToInspiratoryLimb,
            InspiratoryLimbToYPiece,
            YPieceToExpiratoryLimb,
            ExpiratoryLimbToSelector,
            YPieceToAnesthesiaConnection,
            AnesthesiaConnectionToAnesthesiaGround,
            SelectorToAnesthesiaGround,
            AnesthesiaConnectionToMouth,
            GroundConnection,
            EnvironmentToInhaler,
            InhalerToMouth,
            EnvironmentCoreToAbsoluteReference,
            EnvironmentSkinToAbsoluteReference,
            EnvironmentSkinToClothing,
            AbsoluteReferenceToClothing,
            AbsoluteReferenceToActive,
            ActiveToClothing,
            ClothingToAmbientEnvironment,
            ClothingToEnclosure,
            AbsoluteReferenceToAmbientEnvironment,
            AbsoluteReferenceToEnclosure
          };

          /**
           * @brief Default constructor.
           *
           * Note that this constructor may leave the instance in an
           * invalid state.
           */
          enumBioGearsPath ();

          /**
           * @brief Create an instance from the underlying enum value.
           *
           * @param v A enum value.
           */
          enumBioGearsPath (value v);

          /**
           * @brief Create an instance from a C string.
           *
           * @param v A string value.
           */
          enumBioGearsPath (const char* v);

          /**
           * @brief Create an instance from a string.
           *
           * @param v A string value.
           */
          enumBioGearsPath (const ::std::string& v);

          /**
           * @brief Create an instance from the base value.
           *
           * @param v A base value.
           */
          enumBioGearsPath (const ::xml_schema::string& v);

          /**
           * @brief Create an instance from a DOM element.
           *
           * @param e A DOM element to extract the data from.
           * @param f Flags to create the new instance with.
           * @param c A pointer to the object that will contain the new
           * instance.
           */
          enumBioGearsPath (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

          /**
           * @brief Create an instance from a DOM attribute.
           *
           * @param a A DOM attribute to extract the data from.
           * @param f Flags to create the new instance with.
           * @param c A pointer to the object that will contain the new
           * instance.
           */
          enumBioGearsPath (const ::xercesc::DOMAttr& a,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

          /**
           * @brief Create an instance from a string fragment.
           *
           * @param s A string fragment to extract the data from.
           * @param e A pointer to DOM element containing the string fragment.
           * @param f Flags to create the new instance with.
           * @param c A pointer to the object that will contain the new
           * instance.
           */
          enumBioGearsPath (const ::std::string& s,
                            const ::xercesc::DOMElement* e,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

          /**
           * @brief Copy constructor.
           *
           * @param x An instance to make a copy of.
           * @param f Flags to create the copy with.
           * @param c A pointer to the object that will contain the copy.
           *
           * For polymorphic object models use the @c _clone function instead.
           */
          enumBioGearsPath (const enumBioGearsPath& x,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

          /**
           * @brief Copy the instance polymorphically.
           *
           * @param f Flags to create the copy with.
           * @param c A pointer to the object that will contain the copy.
           * @return A pointer to the dynamically allocated copy.
           *
           * This function ensures that the dynamic type of the instance is
           * used for copying and should be used for polymorphic object
           * models instead of the copy constructor.
           */
          virtual enumBioGearsPath*
          _clone (::xml_schema::flags f = 0,
                  ::xml_schema::container* c = 0) const;

          /**
           * @brief Assign the underlying enum value.
           *
           * @param v A enum value.
           * @return A refernce to the instance.
           */
          enumBioGearsPath&
          operator= (value v);

          /**
           * @brief Implicit conversion operator to the underlying
           * enum value.
           *
           * @return A enum value.
           */
          virtual
          operator value () const
          {
            return _xsd_enumBioGearsPath_convert ();
          }

          //@cond

          protected:
          value
          _xsd_enumBioGearsPath_convert () const;

          public:
          static const char* const _xsd_enumBioGearsPath_literals_[241];
          static const value _xsd_enumBioGearsPath_indexes_[241];

          //@endcond
        };
      }
    }
  }
}

#include <iosfwd>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        __attribute__ ((visibility ("default")))
        ::std::ostream&
        operator<< (::std::ostream&, enumBioGearsPath::value);

        __attribute__ ((visibility ("default")))
        ::std::ostream&
        operator<< (::std::ostream&, const enumBioGearsPath&);
      }
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <iosfwd>

#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>
#include <xercesc/framework/XMLFormatter.hpp>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        __attribute__ ((visibility ("default")))
        void
        operator<< (::xercesc::DOMElement&, const enumBioGearsPath&);

        __attribute__ ((visibility ("default")))
        void
        operator<< (::xercesc::DOMAttr&, const enumBioGearsPath&);

        __attribute__ ((visibility ("default")))
        void
        operator<< (::xml_schema::list_stream&,
                    const enumBioGearsPath&);
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
#include "decimal.hxx"

#include "double-parsing.hxx"
#include "decimal-parsing.hxx"

#include "double-serialization.hxx"
#include "decimal-serialization.hxx"
//
// End epilogue.

#endif // ENUM_BIO_GEARS_PATH_HXX
